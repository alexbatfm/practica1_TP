APLICACION ALMACEN

Requisitos:
	- Representar un Almacén con sus Productos y Albaranes
	- Poder leer los productos desde un fichero
	- Poder escribr los productos a un fichero
	- Poder crear albaranes
	- Poder añadir / eliminar productos del albarán
	- Que al añadir / eliminar los productos del albarán, que se actualicen las existencias del almacén
	- Poder generar los albaranes creados en un fichero

NOTA En todas las funciones Booleanas con codigoError: True => Éxito, False => Error  
	

Clase Producto
  Atributos:
	Cadena codigo
	Cadena nombre
	Entero existencias
  Métodos:
	leer
	escribir
	devuelveCadena
	devuelveCodigo
	devuelveExistencias
	Booleano modificarExistencias -> Verdadero => ÉXITO; Falso => ERROR
	Booleano obtenerExistencias (Producto p, Entero existencias) -> Devuelve el producto con el número de existencias pertinente o Falso en caso de error
	

Clase Albarán
  Atributos:
	Cadena código
	Cadena cliente
	Fecha fecha
	Producto[] Productos
  Métodos:
	Booleano añadirProducto (Producto p) -> Verdadero => EXITO; Falso => NO HABÍA SITIO
	Producto eliminarProducto(Cadena codigo, Entero existencias, Entero codigoError) Return == null => codigoError = (1 => PRODUCTO NO ENCONTRADO, 2 => EXISTENCIAS INSUFICIENTES); 
	generar

Clase Almacén
  Atributos:
	Producto[] productos
	Almacen almacen
  Métodos:
	leerProductos
	escribirProductos
	nuevoAlbarán
	Booleano añadirProductoAlbaran (Cadena codigo, Entero existencias, Entero codigoError) codigoError -> (1 = PRODUCTO NO ENCONTRADO, 2 = EXISTENCIAS INSUFICIENTES, 3 = NO SITIO ALBARAN, 4 ERROR FATAL (Inconsistencia Datos))
	Booleano eliminarProductoAlbaran (Cadena codigo, Entero existencias, Entero codigoError) codigoError -> (1 = PRODUCTO NO ENCONTRADO, 2 = EXISTENCIAS INSUFICIENTES, 3 = NO SITIO ALBARAN, 4 ERROR FATAL (Inconsistencia Datos))
	generarAlbaran
